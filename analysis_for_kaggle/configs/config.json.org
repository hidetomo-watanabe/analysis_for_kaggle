{
    "data": {
        "train_path": "/path/train.csv",
        "test_path": "/path/test.csv",
        "output_dir": "/path/outputs",
        "type": "table",
        "pred_cols": ["Hoge"],
        "id_col": "Id",
        "delimiter": ","
    },
    "pre": {
        "train_mode": "clf",
        "y_pre": false,
        "y_scaler": "standard",
        "savename": "tmp_file",
        "table": {
            "adhoc_df": {
                "myfunc": "hoge",
                "methods": [
                    "translate_hoge",
                    "translate_fuga"
                ]
            },
            "del": [
                "Hoge",
                "Foo"
            ],
            "missing": true,
            "category": {
                "target": [
                    "Hoge",
                    "Fuga"
                ],
                "model": "onehot"
            },
            "adhoc_ndarray": {
                "myfunc": "hoge",
                "methods": [
                    "translate_hoge",
                    "translate_fuga"
                ]
            },
            "x_scaler": "standard",
            "dimension": {
                "n": 250,
                "model": "pca"
            },
            "adversarial": {
                "model": "rf_clf",
                "scoring": "accuracy",
                "cv": 3,
                "n_jobs": -1,
                "n_trials": 3,
                "params": {
                    "n_estimators": [3, 5, 10],
                    "max_depth": [3, 5, 10]
                },
                "threshold": 0.5,
                "add_column": false
            },
            "no_anomaly": {
                "contamination": "auto",
                "add_column": false
            },
            "undersampling": "random",
            "oversampling": "smote",
            "reshape_for_keras": ["category", "lstm"]
        },
        "image": {
            "img_path": "img_path",
            "resize": {
                "x": 32,
                "y": 32
            },
            "augmentation": {
                "flip": true,
                "rotate": true,
                "noize": true,
                "invert": true
            }
        }
    },
    "fit": {
        "myfunc": "hoge",
        "train_mode": "clf",
        "cv": {
            "fold": "stratifiedk",
            "num": 3
        },
        "n_jobs": -1,
        "ensemble": {
            "mode": "stacking",
            "model": "log_reg",
            "modelname": "stacker",
            "weights": [1, 1, 1, 1, 1, 1],
            "k": 10,
            "proportion": 0.2,
            "seed": 111
        },
        "scoring": "accuracy",
        "single_models": [
            {
                "model": "log_reg",
                "modelname": "tmp_model1",
                "train_all": true,
                "n_trials": 1,
                "fit_params": {
                },
                "params": {
                    "C": [0.01, 0.03, 0.05, 0.1, 0.3, 0.5, 1, 5, 10],
                    "class_weight": ["balanced"],
                    "max_iter": [10000],
                    "solver": ["sag", "liblinear"],
                    "random_state": [42],
                    "n_jobs": [-1]
                }
            },
            {
                "model": "gbdt_clf",
                "multiclass": "onevsrest",
                "modelname": "tmp_model2",
                "n_trials": 1,
                "fit_params": {
                },
                "params": {
                    "max_depth": [4, 6, 8, 10],
                    "learning_rate": [0.1],
                    "n_estimators": [1000],
                    "random_state": [42]
                },
                "pseudo": {
                    "threshold": 0.8
                }
            },
            {
                "model": "xgb_clf",
                "multiclass": "onevsrest",
                "modelname": "tmp_model3",
                "n_trials": 1,
                "fit_params": {
                },
                "params": {
                    "max_depth": [7, 10, 30, 50],
                    "learning_rate": [0.1],
                    "n_estimators": [1000],
                    "reg_alpha": [0, 5, 15, 300],
                    "reg_lambda": [0, 5, 15, 300],
                    "random_state": [42]
                }
            },
            {
                "model": "lgb_clf",
                "multiclass": false,
                "modelname": "tmp_model4",
                "n_trials": 1,
                "fit_params": {
                    "early_stopping_rounds": 100
                },
                "params": {
                    "max_depth": [7, 10, 30, 50],
                    "min_data_in_leaf": [10, 20, 30, 50, 100, 500, 1000],
                    "learning_rate": [0.1],
                    "num_rounds": [1000],
                    "num_leaves": [10, 31, 50, 70, 80],
                    "lambda_l1": [0, 5, 15, 300],
                    "lambda_l2": [0, 5, 15, 300],
                    "seed": [42]
                }
            },
            {
                "model": "catb_clf",
                "multiclass": false,
                "modelname": "tmp_model5",
                "n_trials": 1,
                "fit_params": {
                },
                "params": {
                    "depth": [7, 10, 30, 50],
                    "learning_rate": [0.1],
                    "iterations": [1000],
                    "max_leaves": [10, 31, 50, 70, 80],
                    "l2_leaf_reg": [0, 5, 15, 300],
                    "early_stopping_rounds": [100],
                    "random_state": [42]
                }
            },
            {
                "model": "svc",
                "multiclass": "onevsone",
                "modelname": "tmp_model6",
                "n_trials": 1,
                "fit_params": {
                },
                "params": {
                    "probability": [true],
                    "C": [1, 2, 3, 4, 5],
                    "degree": [1, 2, 3, 4, 5],
                    "kernel": ["rbf", "linear", "poly", "sigmoid"],
                    "gamma": ["auto"]
                }
            },
            {
                "model": "keras_clf",
                "modelname": "tmp_model7",
                "n_trials": 1,
                "fit_params": {
                },
                "params": {
                }
            }
        ],
        "permutation": false
    },
    "post": {
        "myfunc": "hoge",
        "methods": [
            "add_hoge",
            "add_fuga"
        ]
    },
    "notify": {
        "mode": "slack",
        "slack": "https://hooks.slack.com/services/hogehoge"
    }
}
