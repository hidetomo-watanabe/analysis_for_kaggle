{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "config_path = './configs/config.json'\n",
    "config_text = {}"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "import sys\n",
    "sys.path.append('./modules')\n",
    "from modules.DataTranslater import DataTranslater\n",
    "from modules.Predicter import Predicter\n",
    "%matplotlib inline\n",
    "%reload_ext autoreload\n",
    "%autoreload 2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "translater_obj = DataTranslater()\n",
    "translater_obj.read_config_file(config_path)\n",
    "# translater_obj.read_config_text(config_text)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "print('### RAW DATA')\n",
    "translater_obj.create_raw_data()\n",
    "translater_obj.display_data()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "print('### TRANSLATE RAW DATA')\n",
    "translater_obj.translate_raw_data()\n",
    "translater_obj.display_data()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "print('### DATA FOR MODEL')\n",
    "translater_obj.create_data_for_model()\n",
    "translater_obj.normalize_data_for_model()\n",
    "translater_obj.reduce_dimension_of_data_for_model()\n",
    "feature_columns, test_ids, X_train, Y_train, X_test = \\\n",
    "    translater_obj.get_data_for_model()\n",
    "scaler_y = translater_obj.get_scaler_y()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "predicter_obj = Predicter(\n",
    "    feature_columns, test_ids, X_train, Y_train, X_test, scaler_y)\n",
    "predicter_obj.read_config_file(config_path)\n",
    "# predicter_obj.read_config_text(config_text)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "print('### VISUALIZE TRAIN RAW DATA')\n",
    "train_df, _ = translater_obj.get_raw_data()\n",
    "predicter_obj.visualize_train_raw_data(train_df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "print('### VALIDATE')\n",
    "predicter_obj.is_ok_with_adversarial_validation()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "print('### FIT')\n",
    "predicter_obj.calc_ensemble_model()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "print('### VISUALIZE LEARNING CURVES')\n",
    "predicter_obj.visualize_learning_curves()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "print('### PREDICT')\n",
    "predicter_obj.calc_output()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "print('### VISUALIZE Y TRAIN PRED DATA')\n",
    "predicter_obj.visualize_y_train_pred_data()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "print('### OUTPUT')\n",
    "predicter_obj.write_output()"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.8"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 1
}
