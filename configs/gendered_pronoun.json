{
    "data": {
        "train_path": "../input/gendered_pronoun/train.tsv",
        "test_path": "../input/gendered_pronoun/test_stage_2.tsv",
        "output_dir": ".",
        "type": "table",
        "pred_cols": ["A","B","NEITHER"],
        "id_col": "ID",
        "delimiter": "\t"
    },
    "pre": {
        "train_mode": "clf",
        "y_pre": false,
        "y_scaler": "standard",
        "table": {
            "adhoc": {
                "myfunc": "gendered_pronoun",
                "methods": [
                    "rename_columns",
                    "get_base_features",
                    "get_nlp_features",
                    "get_train_neither"
                ]
            },
            "del": [
                "Pronoun",
                "Text",
                "A-noun",
                "B-noun",
                "URL"
            ],
            "category": {
                "target": [
                ],
                "model": "onehot"
            },
            "x_scaler": "standard",
            "dimension": false,
            "adversarial": false,
            "undersampling": "random",
            "oversampling": false
        }
    },
    "fit": {
        "myfunc": "gendred_pronoun",
        "train_mode": "clf",
        "ensemble": {
            "mode": "stacking",
            "model": "log_reg",
            "modelname": "tmp_gp",
            "k": 10,
            "seed": 111
        },
        "scoring": "neg_log_loss",
        "single_models": [
            {
                "model": "lgb_clf",
                "multiclass": "onevsrest",
                "modelname": "tmp",
                "max_evals": 50,
                "fit_params" : {
                },
                "params" : {
                    "num_leaves": [5, 10, 20, 30, 50, 100],
                    "max_depth": [5, 10, 20, 30, 50, 100],
                    "n_estimators": [5, 10, 20, 30, 50, 100]
                }
            }
        ],
        "permutation": false,
        "post": {
            "myfunc": false,
            "methods": [
            ]
        }
    },
    "notify": {
        "slack": "https://hooks.slack.com/services/hogehoge"
    }
}
